{
    "_schemaVersion": "1.0.0",

    "_typedefs": {

        "Bands": {

            "purpose":"Struct defining confidence bands for the curves.",
            "type":"struct",
            "fields":[
                {"name":"conflev", "type":["scalar", "real", ">=0", "1<="], "purpose":"scalar in the interval (0 1) which contains the confidence level of the bands."},
                {"name":"nsamp", "type":"double", "purpose":"Number of subsamples to extract in the bootstrap replicates."},
                {"name":"nsimul", "type":"double", "purpose":"number of replicates to use to create the confidence bands."},
                {"name":"valSolution", "type":"logical", "purpose":"boolean which specifies if it is necessary to perform an outlier detection procedure on the components which have been found using optimalK and optimal alpha."},
                {"name":"LRtest", "type":"logical", "purpose":"Likelihood ratio test."},
                {"name":"usepriorSol", "type":"logical", "purpose":"Initialization of the EM for a particular subset."},
                {"name":"outliersFromUniform", "type":"logical", "purpose":"way of generating the outliers in the bootstrap replicates."},
                {"name":"nsimulExtra", "type":"double", "purpose":"number of replicates to use to compute the empirical pvalue of LRtest if multiple solutions are found given a value of alpha"},
                {"name":"nsampExtra", "type":"double", "purpose":"number of subsamples to extract in each replicate to compute the empirical pvalue of LRtest if multiple solutions are found given a value of alpha"},
                {"name":"usepriorSolExtra", "type":"logical", "purpose":"Initialization of the EM for particular subset."}
            ]
        },

        "TkmeansOpt": {

            "purpose":"tkmeans optional arguments.",
            "type":"struct",
            "fields": [
                {"name":"nsamp", "type":["double", "integer"], "purpose":"Number of subsamples"},
                {"name":"refsteps", "type":"double", "purpose":"Number of iterations."},
                {"name":"reftol", "type":["double", "scalar"], "purpose":"Tolerance."},
                {"name":"weights", "type":["double", "integer"], "purpose":"Cluster weights."},
                {"name":"plots", "type":[["single"], ["double"], ["char", "choices={'contourf', 'contour', 'ellipse', 'boxplotb'}"]], "purpose":"Plot on the screen."},
                {"name":"msg", "type":["double", "scalar"], "purpose":"Message on the screen."},
                {"name":"nocheck", "type":["double", "scalar"], "purpose":"Check input."},
                {"name":"nomes", "type":["double", "scalar"], "purpose":"Estimated time message."},
                {"name":"Ysave", "type":["double", "scalar"], "purpose":"Saving Y."}
            ]
        },

        "Pa": {

            "purpose":"structure defining constraints to apply and model specification.",
            "type":"struct",
            "fields": [
                {"name":"pars", "type":["char"], "purpose":"type of Gaussian Parsimonious Clustering Model."},
                {"name":"exactrestriction", "type":"logical", "default":"'false'", "purpose":"If pa.exactrestriction is true the covariance matrices have to be generated with the exact values of the restrictions specified in pa.cdet, pa.shw and pa.swb."},
                {"name":"cdet", "type":["numeric", "scalar", ">=1"], "purpose":"specifies the the restriction which has to be applied to the determinants."},
                {"name":"shw", "type":["numeric", "scalar", ">=1"], "purpose":"specifies the the restriction which has to be applied to the elements of the shape matrices inside each group."},
                {"name":"shb", "type":["numeric", "scalar", ">=1"], "purpose":"specifies the restriction which has to be applied to the ordered elements of the shape matrices across groups."}
            ]
        },

        "Sph": {

            "purpose":"Spherical covariances.",
            "type":"struct",
            "fields": [
                {"name":"pars", "type":["char"], "purpose":"type of Gaussian Parsimonious Clustering Model."},
                {"name":"exactrestriction", "type":"logical", "default":"'false'", "purpose":"If pa.exactrestriction is true the covariance matrices have to be generated with the exact values of the restrictions specified in sph.cdet, sph.shw and sph.swb."},
                {"name":"cdet", "type":["numeric", "scalar"], "purpose":"specifies the the restriction which has to be applied to the determinants."},
                {"name":"shw", "type":["numeric", "scalar"], "purpose":"specifies the the restriction which has to be applied to the elements of the shape matrices inside each group."},
                {"name":"shb", "type":["numeric", "scalar"], "purpose":"specifies the restriction which has to be applied to the ordered elements of the shape matrices across groups."}
            ]
        },

        "xdistrib": {

            "purpose":"distribution to use for each explanatory variable.",
            "type":"struct",
            "fields": [
                {"name":"intercept", "type":["numeric", "scalar"], "purpose":"scalar equal to 1 if intercept is present."},
                {"name":"type", "type":["char", "choices={'Normal', 'Uniform', 'HalfNormal', 'User'}"], "purpose":"identifies the kind of distribution."},
                {"name":"mu", "type":"double", "purpose":"matrix containing the parameters mu for each explanatory variable and each group."},
                {"name":"sigma", "type":"double", "purpose":"matrix containing the parameters sigma for each explanatory variable and each group."},
                {"name":"a", "type":"double", "purpose":"matrix containing the parameters a (the lower limits) for each explanatory variable and each group."},
                {"name":"b", "type":"double", "purpose":"matrix containing the parameters b (the upper limits) for each explanatory variable and each group."},
                {"name":"BarX", "type":"double", "purpose":"matrix containing the means of the p explanatory variables for each group."}
            ]
        },

        "Betadistrib": {

            "purpose":"distribution to use for regression coefficients.",
            "type":"struct",
            "fields": [
                {"name":"type", "type":["char", "choices={'Normal', 'Uniform', 'HalfNormal', 'User'}"], "purpose":"identifies the kind of distribution."},
                {"name":"mu", "type":"double", "purpose":"matrix containing the parameters mu for the distribution of each element of beta across each group."},
                {"name":"sigma", "type":"double", "purpose":"matrix containing the parameters sigma for the distribution of each element of beta across each group."},
                {"name":"a", "type":"double", "purpose":"matrix containing the parameters a for the distribution of each element of beta across each group."},
                {"name":"b", "type":"double", "purpose":"matrix containing the parameters b for the distribution of each element of beta across each group."},
                {"name":"Beta", "type":"double", "purpose":"matrix containing the vectors of regression coefficients for the k groups."}
            ]
        },

        "d": {

            "purpose":"Informations to compute the overlap matrix",
            "type":"struct",
            "fields": [
                {"name":"idx", "type":["double", "vector"], "purpose":"Label of the units"},
                {"name":"Y", "type":"double", "purpose":"Input data"},
                {"name":"sigmaopt", "type":"double", "purpose":"covariance matrices of the groups"},
                {"name":"muopt", "type":"double", "purpose":"cluster centroid locations"},
                {"name":"siz", "type":"double"}
            ]
        },

        "Plots": {

            "purpose":"Additional plot on the screen",
            "type":"struct",
            "fields": [
                {"name":"type", "type":["char", "choices={'contourf', 'contour', 'ellipse', 'boxplotb'}"], "purpose":"plot type"}
            ]
        }
    },

    "ClusterRelabel":
    {
        "inputs":
        [
            {"name":"IDX", "kind":"required", "type":"cell", "purpose":"Assignment of units to groups for different values of c (restriction factor) and k (number of groups)."},
            {"name":"pivotunits", "kind":"required", "type":["numeric", "integer", "vector"], "purpose":"list of the units which must (whenever possible) have the same label." }
        ],

        "outputs":
        [
            {"name":"IDXrelabelled", "type":"cell", "purpose":"cell with the same size as input cell IDX and withthe same meaning of input cell IDX but with consistent labels."},
            {"name":"idxMapping", "type":"double", "purpose":"indexes of the permutations associated with IDX{1,1}."}
        ],

        "description":"Enables to control the labels of the clusters which contain predefined units"
    },

    "ctlcurves":
    {
        "inputs":
        [
            {"name":"Y", "kind":"required", "type":"double", "purpose":"Data matrix containing n observations on v variables, Rows of Y represent observations, and columns represent variables."},
            {"name":"alpha", "kind":"namevalue", "type":["double", "vector"], "purpose":"Vector which specifies the values of trimming levels which have to be considered."},
            {"name":"bands", "kind":"namevalue", "type":[["logical"], ["struct:Bands"]], "purpose":"confidence bands for the curves."},
            {"name":"kk", "kind":"namevalue", "type":[["int16"], ["int32"], ["single"], ["double"]], "purpose":"number of mixture components."},
            {"name":"cshape", "kind":"namevalue", "type":[["single", ">=1"], ["double", ">=1"]], "purpose":"constraint to apply to each of the shape matrices."},
            {"name":"equalweights", "kind":"namevalue", "type":"logical", "purpose":"cluster weights in the concentration and assignment steps."},
            {"name":"msg", "kind":"namevalue", "type":"logical", "purpose":"display or not messages about code execution."},
            {"name":"mixt", "kind":"namevalue", "type":[["single"], ["double"]], "purpose":"Mixture modelling or crisp assignment."},
            {"name":"nocheck", "kind":"namevalue", "type":[["single"], ["double"]], "purpose":"Check input arguments."},
            {"name":"nsamp", "kind":"namevalue", "type":"double", "purpose":"number of subsamples to extract."},
            {"name":"refsteps", "kind":"namevalue", "type":[["single"], ["double"]], "purpose":"Number of refining iterations."},
            {"name":"reftol", "kind":"namevalue", "type":[["single"], ["double"]], "purpose":"Default value of tolerance for the refining steps."},
            {"name":"restrfactor", "kind":"namevalue", "type":["double", "positive"], "purpose":"Restriction factor."},
            {"name":"restrtype", "kind":"namevalue", "type":["char", "choices={'eigen', 'deter'}"], "default":"'eigen'", "purpose":"type of restriction."},
            {"name":"startv1", "kind":"namevalue", "type":[["single"], ["double"]], "purpose":"define how to initialize centroids and cov matrices."},
            {"name":"cleanpool", "kind":"namevalue", "type":[["single"], ["double"]], "purpose":"determines if the parallel pool has to be cleaned after the execution of the routine."},
            {"name":"numpool", "kind":"namevalue", "type":"double", "purpose":"number of pools for parellel computing."},
            {"name":"plots", "kind":"namevalue", "type":[["single"], ["double"]], "purpose":"Plot on the screen."},
            {"name":"Ysave", "kind":"namevalue", "type":"logical", "purpose":"save input matrix."}
        ],

        "description":"Computes Classification Trimmed Likelihood Curves"
    },

    "dempk":
    {
        "inputs":
        [
            {"name":"Y", "kind":"required", "type":[["single", "integer"], ["double", "integer"]], "purpose":"Input data."},
            {"name":"k", "kind":"required", "type":[["single"], ["double"]], "purpose":"Number of components searched by tkmeans algorithm."},
            {"name":"g", "kind":"required", "type":[["single"], ["double"]], "purpose":"Merging rule."},
            {"name":"alpha", "kind":"namevalue", "type":[["single"], ["double"]], "purpose":"Global trimming level."},
            {"name":"plots", "kind":"namevalue", "type":[["single"], ["double"], ["char", "choices={'contourf', 'contour', 'ellipse', 'boxplotb'}"]], "purpose":"Plot on the screen."},
            {"name":"tkmeansOpt", "kind":"namevalue", "type":"struct:TkmeansOpt", "purpose":"tkmeans optional arguments."},
            {"name":"tkmeansOut", "kind":"namevalue", "type":[["single"], ["double"]], "default":"0", "purpose":"Saving tkmeans output structure."},
            {"name":"linkagearg", "kind":"namevalue", "type":["char", "choices={'single', 'average', 'centroid', 'complete', 'median', 'ward', 'weighted'}"], "default":"'single'", "purpose":"Linkage used."},
            {"name":"Ysave", "kind":"namevalue", "type":"double", "purpose":"Saving Y."}
        ],

        "description":"Performs a merging of components found by tkmeans"
    },

    "FSMmmdrs":
    {
        "inputs":
        [
            {"name":"Y", "kind":"required", "type":[["single"], ["double"]], "purpose":"Input data."},
            {"name":"init", "kind":"namevalue", "type":"double", "purpose":"specifies the point where to initialize the search and start monitoring the required diagnostics."},
            {"name":"bsbsteps", "kind":"namevalue", "type":"double", "purpose":"vector which specifies for which steps of the fwd search it is necessary to save the units forming subset for each random start."},
            {"name":"nsimul", "kind":"namevalue", "type":["double", "scalar"], "purpose":"number of random starts."},
            {"name":"nocheck", "kind":"namevalue", "type":["double", "scalar"], "default":"0", "purpose":"It controls whether to perform checks on matrix Y."},
            {"name":"plots", "kind":"namevalue", "type":["double", "scalar"], "default":"0", "purpose":"If equal to one a plot of random starts minimum Mahalanobis residual appears  on the screen with 1%, 50% and 99% confidence bands"},
            {"name":"numpool", "kind":"namevalue", "type":["numeric", "scalar"]},
            {"name":"cleanpool", "kind":"namevalue", "type":["numeric", "scalar"], "default":"0", "purpose":"determines if the parallel pool has to be cleaned after the execution of the random starts."},
            {"name":"msg", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Scalar which controls whether to display or not messages about random start progress."}
        ],

        "description":"Performs random start monitoring of minimum Mahalanobis distance"
    },

    "FSRmdrrs":
    {
        "inputs":
        [
            {"name":"y", "kind":"required", "type":["numeric", "vector"], "purpose":"Response variable."},
            {"name":"X", "kind":"required", "type":"numeric", "purpose":"Predictor variables."},
            {"name":"init", "kind":"namevalue", "type":"double", "purpose":"Search initialization."},
            {"name":"intercept", "kind":"namevalue", "type":"double", "default":"1", "purpose":"Indicator for constant term."},
            {"name":"bsbsteps", "kind":"namevalue", "type":[["numeric", "scalar"], ["numeric", "vector"]], "purpose":"Save the units forming subsets."},
            {"name":"nsimul", "kind":"namevalue", "type":["double", "scalar"], "purpose":"number of random starts."},
            {"name":"nocheck", "kind":"namevalue", "type":["double", "scalar"], "default":"0", "purpose":"Check input arguments."},
            {"name":"constr", "kind":"namevalue", "type":["double", "vector"], "purpose":"Constrained search."},
            {"name":"plots", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Plot on the screen."},
            {"name":"numpool", "kind":"namevalue", "type":"double", "purpose":"use parallel computing and parfor."},
            {"name":"cleanpool", "kind":"namevalue", "type":"logical", "purpose":"clean pool after execution."},
            {"name":"msg", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Scalar which controls whether to display or not messages about random start progress."},
            {"name":"internationaltrade", "kind":"namevalue", "type":"logical", "default":"'false'", "purpose":"criterion for updating subset."}
        ],
        
        "description":"Performs random start monitoring of minimum deletion residual"
    },

    "genSigmaGPCM":
    {
        "inputs":
        [
            {"name":"v", "kind":"required", "type":["numeric", "scalar"], "purpose":"number of dimensions (variables)."},
            {"name":"k", "kind":"required", "type":["numeric", "scalar"], "purpose":"number of groups (components)."},
            {"name":"pa", "kind":"required", "type":"struct:Pa", "purpose":"Constraints to apply and model specification."}
        ],

        "description":"Generates covariance matrix for the 14 Gaussian Parsimonious Clustering Models"
    },

    "GowerIndex":
    {
        "inputs":
        [
            {"name":"Y", "kind":"required", "type":[["double"], ["single"]], "purpose":"Input data."},
            {"name":"l", "kind":"namevalue", "type":["numeric", "vector"], "purpose":"type of variable."}
        ],

        "outputs":
        [
            {"name":"S", "type":"double", "purpose":"matrix with Gower similarity coefficients."},
            {"name":"Stable", "type":"double", "purpose":"matrix with Gower similarity coefficients in table format."}
        ],

        "description":"Computes matrix of similarity indexes using Gower metric"
    },

    "lga":
    {

        "inputs":
        [
            {"name":"X", "kind":"required", "type":"double", "purpose":"input data matrix."},
            {"name":"k", "kind":"required", "type":["numeric", "scalar"], "purpose":"number of clusters."},
            {"name":"biter", "kind":"namevalue", "type":["double", "integer"], "purpose":"Hyperplane number."},
            {"name":"niter", "kind":"namevalue", "type":["double", "positive", "integer"], "purpose":"Number of iterations."},
            {"name":"showall", "kind":"namevalue", "type":"logical", "purpose":"Type of display."},
            {"name":"stand", "kind":"namevalue", "type":"logical", "purpose":"Data standardization."},
            {"name":"silent", "kind":"namevalue", "type":"logical", "purpose":"Text ouptut."},
            {"name":"plots", "kind":"namevalue", "type":["double", "scalar"], "purpose":"plot on the screen."}
        ],

        "description":"Performs linear grouping analysis"
    },

    "MixSim":
    {

        "inputs":
        [
            {"name":"k", "kind":"required", "type":["numeric", "scalar"], "purpose":"number of groups (components)."},
            {"name":"v", "kind":"required", "type":["numeric", "scalar"], "purpose":"number of dimensions"},
            {"name":"BarOmega", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Requested average overlap."},
            {"name":"MaxOmega", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Requested maximum overlap."},
            {"name":"StdOmega", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Requested std of overlap."},
            {"name":"sph", "kind":"namevalue", "type":["struct:Sph"], "purpose":"Spherical covariances."},
            {"name":"PiLow", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Smallest mixing proportion."},
            {"name":"int", "kind":"namevalue", "type":["double", "vector"], "purpose":"Simulation interval of mean vectors."},
            {"name":"resN", "kind":"namevalue", "type":["double", "scalar"], "purpose":"number of simulations."},
            {"name":"tol", "kind":"namevalue", "type":["double", "vector"], "purpose":"Tolerances."},
            {"name":"lim", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Precision in the calculation of probabilities of overlapping."},
            {"name":"Display", "kind":"namevalue", "type":["char", "choices={'off', 'notify', 'iter'}"], "default":"'notify", "purpose":"Level of display."},
            {"name":"R_seed", "kind":"namevalue", "type":"double", "purpose":"use random numbers from R."}
        ],

        "description":"Generates k clusters in v dimensions with given overlap"
    },

    "MixSim":
    {

        "inputs":
        [
            {"name":"k", "kind":"required", "type":["numeric", "scalar"], "purpose":"number of groups (components)."},
            {"name":"v", "kind":"required", "type":["numeric", "scalar"], "purpose":"number of dimensions"},
            {"name":"BarOmega", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Requested average overlap."},
            {"name":"MaxOmega", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Requested maximum overlap."},
            {"name":"StdOmega", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Requested std of overlap."},
            {"name":"sph", "kind":"namevalue", "type":"logical", "purpose":"Spherical covariances."},
            {"name":"hom", "kind":"namevalue", "type":"logical", "purpose":"Equal Sigmas."},
            {"name":"ecc", "kind":"namevalue", "type":["double", "scalar"], "purpose":"maximum eccentricity."},
            {"name":"restrfactor", "kind":"namevalue", "type":["double", "scalar"], "purpose":"eigenvalue restriction factor."},
            {"name":"PiLow", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Smallest mixing proportion."},
            {"name":"int", "kind":"namevalue", "type":["double", "vector"], "purpose":"Simulation interval of mean vectors."},
            {"name":"resN", "kind":"namevalue", "type":["double", "scalar"], "purpose":"number of simulations."},
            {"name":"tol", "kind":"namevalue", "type":["double", "vector"], "purpose":"Tolerances."},
            {"name":"lim", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Precision in the calculation of probabilities of overlapping."},
            {"name":"Display", "kind":"namevalue", "type":["char", "choices={'off', 'notify', 'iter'}"], "default":"'notify", "purpose":"Level of display."},
            {"name":"R_seed", "kind":"namevalue", "type":"double", "purpose":"use random numbers from R."}
        ],

        "description":"Generates k clusters in v dimensions with given overlap"
    },

    "MixSimreg":
    {

        "inputs":
        [
            {"name":"k", "kind":"required", "type":["numeric", "scalar"], "purpose":"Number of groups (components)."},
            {"name":"p", "kind":"required", "type":["numeric", "scalar"], "purpose":"Number of explanatory variables for each regression hyperplane (including intercept)."},
            {"name":"BarOmega", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Requested average overlap."},
            {"name":"MaxOmega", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Requested maximum overlap."},
            {"name":"StdOmega", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Requested std of overlap."},
            {"name":"hom", "kind":"namevalue", "type":"logical", "purpose":"Equal Sigmas."},
            {"name":"restrfactor", "kind":"namevalue", "type":["double", "scalar"], "purpose":"eigenvalue restriction factor."},
            {"name":"PiLow", "kind":"namevalue", "type":["double", "scalar"], "purpose":"Smallest mixing proportion."},
            {"name":"Xdistrib", "kind":"namevalue", "type":[["double", "scalar"], ["struct:xdistrib"]], "purpose":"distribution to use for each explanatory variable."},
            {"name":"betadistrib", "kind":"namevalue", "type":[["double", "scalar"], ["struct:Betadistrib"]], "purpose":"distribution to use for regression coefficients."},
            {"name":"resN", "kind":"namevalue", "type":["double", "scalar", "integer"], "purpose":"maximum number of attempts"},
            {"name":"tol", "kind":"namevalue", "type":["double", "vector", "numel=2"], "purpose":"tolerance"},
            {"name":"lim", "kind":"namevalue", "type":["double", "integer"], "purpose":"maximum number of integration terms to use inside routine ncx2mixtcdf."},
            {"name":"Display", "kind":"namevalue", "type":"logical", "purpose":"Level of display"}
        ],

        "description":"Generates k regression hyperplanes in p dimensions with given overlap"
    },

    "overlap":
    {

        "inputs":
        [
            {"name":"k", "kind":"required", "type":["numeric", "scalar", "integer"], "purpose":"number of components (groups)"},
            {"name":"v", "kind":"required", "type":["numeric", "scalar", "integer"], "purpose":"dimensionality (number of variables)"},
            {"name":"Pi", "kind":"required", "type":["numeric", "vector"], "purpose":"Mixing proportions"},
            {"name":"Mu", "kind":"required", "type":"double", "purpose":"centroids"},
            {"name":"S", "kind":"required", "type":["double", "2d"], "purpose":"Covariance matrices"},
            {"name":"tol", "kind":"namevalue", "type":["double", "scalar"], "purpose":"tolerance"},
            {"name":"lim", "kind":"namevalue", "type":["double", "scalar"], "purpose":"maximum number of integration terms"}
        ],

        "outputs":
        [
            {"name":"OmegaMap", "type":"double", "purpose":"map of misclassification probabilities"},
            {"name":"BarOmega", "type":["double", "scalar"], "purpose":"Average overlap"},
            {"name":"MaxOmega", "type":["double", "scalar"], "purpose":"Maximum overlap"},
            {"name":"StdOmega", "type":["double", "scalar"], "purpose":"Std of overlap"},
            {"name":"rcMax", "type":["double", "vector", "numel=2"], "purpose":"pair with largest overlap"}
        ],

        "description":"Computes the exact overlap given the parameters of the mixture"
    },

    "overlapmap":
    {

        "inputs":
        [
            {"name":"D", "kind":"required", "type":"struct:d", "purpose":"Informations to compute the overlap matrix"},
            {"name":"omegaStar", "kind":"namevalue", "type":[["double", "scalar"], ["single", "scalar"]], "purpose":"Pairwise overlap threshold"},
            {"name":"plots", "kind":"namevalue", "type":[["single"], ["double"], ["char", "choices={'contourf', 'contour', 'ellipse', 'boxplotb'}"], ["struct:Plots"]], "purpose":"Additional plot on the screen"},
            {"name":"userColors", "kind":"namevalue", "type":[["single"], ["double"], ["uint8"], ["char", "choices={'parula', 'turbo', 'hsv', 'hot', 'cool', 'spring', 'summer', 'autumn', 'winter', 'gray', 'bone', 'copper', 'pink', 'jet', 'lines', 'colorcube', 'prism', 'flag', 'white'}"]], "purpose":"Color used for the color map"}
        ],

        "outputs": 
        [
            {"name":"out", "type":"struct", "purpose":"output structure"},
            {"name":"userOverlap", "type":"struct", "purpose":"Updating of the results"}
        ],

        "description":"Produces an interactive overlap map"
    }
}
